<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = 0;
defaut_state = 2;

cursor = 0;
max_cursor = 0;

options = false;
options_initialized = false;

// if true, the title is displayed for a couple of seconds before the menu proper
// example: special stages
delay_menu = false;
delay_timer_default = 60;
delay_timer = 60;

// the menu is supposed to be centered - calculate the Y offset needed to do so
menu_y_offset = 0;

// if true, add view offsets to the draw coordinates
draw_with_view_offset = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw - called by parent object

draw_text(100, 100, "YES");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Execute actions when option is selected - called by parent object
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init available options for every state - called by parent object

options = false;
switch(state)
{
    case 1:
        options[0, OPTION_NAME] = 'PLAY';
        options[0, OPTION_TYPE] = OPTION_TYPE_SIMPLE;
        options[0, OPTION_VALUE] = false;
        options[1, OPTION_NAME] = 'OPTIONS';
        options[1, OPTION_TYPE] = OPTION_TYPE_SIMPLE;
        options[1, OPTION_VALUE] = false;
        options[2, OPTION_NAME] = 'EXIT GAME';
        options[2, OPTION_TYPE] = OPTION_TYPE_CONFIRM;
        options[2, OPTION_VALUE] = false;
        break;
    case 2:
    case 3:
        options[0, OPTION_NAME] = 'CONTINUE';
        options[0, OPTION_TYPE] = OPTION_TYPE_SIMPLE;
        options[0, OPTION_VALUE] = false;
        options[1, OPTION_NAME] = 'OPTIONS';
        options[1, OPTION_TYPE] = OPTION_TYPE_SIMPLE;
        options[1, OPTION_VALUE] = false;
        options[2, OPTION_NAME] = 'RESTART GAME';
        options[2, OPTION_TYPE] = OPTION_TYPE_CONFIRM;
        options[2, OPTION_VALUE] = false;
        break;
    case 4:
        options[0, OPTION_NAME] = 'OUT OF RINGS';
        options[0, OPTION_TYPE] = OPTION_TYPE_TITLE;
        options[0, OPTION_VALUE] = false;
        options[1, OPTION_NAME] = 'TRY AGAIN -1 LIFE';
        options[1, OPTION_TYPE] = OPTION_TYPE_SIMPLE;
        options[1, OPTION_VALUE] = false;
        options[2, OPTION_NAME] = 'RETURN TO ACT';
        options[2, OPTION_TYPE] = OPTION_TYPE_SIMPLE;
        options[2, OPTION_VALUE] = false;
        break;
    case 5:
        options[0, OPTION_NAME] = 'OFF TRACK';
        options[0, OPTION_TYPE] = OPTION_TYPE_TITLE;
        options[0, OPTION_VALUE] = false;
        options[1, OPTION_NAME] = 'TRY AGAIN -1 LIFE';
        options[1, OPTION_TYPE] = OPTION_TYPE_SIMPLE;
        options[1, OPTION_VALUE] = false;
        options[2, OPTION_NAME] = 'RETURN TO ACT';
        options[2, OPTION_TYPE] = OPTION_TYPE_SIMPLE;
        options[2, OPTION_VALUE] = false;
        break;
    case 6:
        options[0, OPTION_NAME] = 'METAL SONIC WINS';
        options[0, OPTION_TYPE] = OPTION_TYPE_TITLE;
        options[0, OPTION_VALUE] = false;
        options[1, OPTION_NAME] = 'TRY AGAIN -1 LIFE';
        options[1, OPTION_TYPE] = OPTION_TYPE_SIMPLE;
        options[1, OPTION_VALUE] = false;
        options[2, OPTION_NAME] = 'RETURN TO ACT';
        options[2, OPTION_TYPE] = OPTION_TYPE_SIMPLE;
        options[2, OPTION_VALUE] = false;
        break;
        
}
options_initialized = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// step - called by parent object

/*
States available by default:

0 - default state - see below
1 - main title screen
2 - level pause menu
3 - special stage pause menu
4 - special stage retry menu (out of rings)
5 - special stage retry menu (lost)
6 - special stage retry menu (off track)
7 - options
8 - control config

*/

// there is no such thing as default state - a default state must be a context-specific one
if(state == 0)
{
   state = defaut_state;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
