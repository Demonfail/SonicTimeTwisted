<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2048</depth>
  <persistent>-1</persistent>
  <parentName>objTransition</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
// state
mode = 0;
// banners
fade_alpha = 0;
planet_ox = 600; //608;
planet_oy = -600; //-416;
banner_ox = objScreen.width + 240;
banner_speed = 16;
// title strings
title_word = 0;
for (var i=0; i&lt;4; i+=1)
{
    title_string[i] = "";
    title_length[i] = 0;
    title_pos[i] = 0;
    title_ox[i] = 0;
    title_scale[i, 0] = 12;
}
    title_string[0] = "Frigid";
    title_string[1] = "Fortress";
    title_string[2] = "Zone";
    if objProgram.in_past
        title_string[3] = "ACT1 PAST";
    else title_string[3] = "ACT1 FUTURE";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///d3d_end();
d3d_end();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup title
var i, j;
// setup lengths and offsets
draw_set_halign(fa_left);
for (i=0; i&lt;4; i+=1)
{
    // get length in characters
    title_length[i] = string_length(title_string[i]);
    if title_length[i]&lt;1 continue;
    // set font
    switch i
    {
    case 2: draw_set_font(objResources.fontTitleSmall); break;
    case 3: draw_set_font(objResources.fontTitleYellow); break;
    default: draw_set_font(objResources.fontTitleLarge);
    }
    // set offset
    title_ox[i] = 298-string_width(title_string[i]);
    // go through each character
    for (j=0; j&lt;title_length[i]; j+=1) title_scale[i, j] = 12;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mode</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with objLevel {
    timer_enabled = true;
    started = true;
}
with objHud visible = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Get transition mode
switch mode
{
case 0: // fade out
    if (fade_alpha&gt;=1) {if next_room&gt;-1 room_goto(next_room); mode = 1; break;}
    fade_alpha += image_speed;
    break;
case 1: // animate
    // skip on START
    if fade_alpha==0 and planet_ox==-10 and planet_oy==10 and input_check_pressed(cSTART) {objLevel.started = true; objLevel.timer_enabled = true; mode = 2; break;}
    // move ufo
    planet_ox = max(planet_ox-8, -10);
    planet_oy = min(planet_oy+8, 10);
    // scale title
    if title_word&lt;4
    {
        // ignore empty strings
        if title_length[title_word]&lt;1
        {
            title_word += 1;
            if title_word==4 alarm[0] = 120;
        }
        // ignore if past string length
        else if title_pos[title_word]&lt;title_length[title_word]
        {
            // decrease scale to normal
            title_scale[title_word, title_pos[title_word]] = max(title_scale[title_word, title_pos[title_word]]-4, 1);
            if title_scale[title_word, title_pos[title_word]]==1
            {
                // go to the next letter / word
                title_pos[title_word] += 1;
                if title_pos[title_word]==title_length[title_word] {title_pos[title_word] -= 1; title_word += 1;}
                if title_word==4 alarm[0] = 120;
            }
        }
    }
    else
    {
        // fade in
        if fade_alpha&gt;0 fade_alpha -= image_speed;
    }
    break;
case 2: // exit
    planet_ox -= 8;
    // fade away
    image_alpha -= 0.02;
    if image_alpha&lt;=0 instance_destroy();
    break;
case 3: // fade out only
    if fade_alpha&lt;=0 {instance_destroy(); break;}
    fade_alpha -= image_speed;
    break;
}
// move banner
banner_ox -= floor(banner_speed);
if (banner_speed &gt; 3) {
    banner_speed -= (banner_speed - 3) * 0.035;
    if (banner_speed &lt; 3) banner_speed = 3;
}
if (banner_ox &lt; 0) banner_ox += 208;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render title
var i;
/*
// fill screen with black
draw_set_color(c_black);
draw_set_alpha(fade_alpha);
draw_rectangle(view_xview[view_current], view_yview[view_current], view_xview[view_current]+view_wview[view_current], view_yview[view_current]+view_hview[view_current], false);
draw_set_color(c_white);
draw_set_alpha(1);
*/
// ignore if not rendering card
if mode&lt;1 or mode&gt;2 exit;
// planet back
draw_set_color(image_blend);
draw_set_alpha(image_alpha);
draw_sprite(sprTitlePlanet, 0, view_xview[view_current]+planet_ox, view_yview[view_current]+planet_oy);
// banner
var boxm = floor(banner_ox)-208;
draw_sprite(sprTitleBannerLeft, 0, view_xview+boxm, view_yview+186);
for (i=0; i&lt;3; i+=1) {
    draw_sprite(sprTitleBanner, 0, view_xview+boxm+(i*208), view_yview+186);
}
// planet front
draw_sprite(sprTitlePlanet, 1, view_xview[view_current]+planet_ox, view_yview[view_current]+planet_oy);
// title first word
draw_set_halign(fa_left);
draw_set_font(objResources.fontTitleLarge);
for (i=0; i&lt;title_pos[0]+1; i+=1) draw_text_transformed(view_xview[view_current]+title_ox[0]+string_width(string_copy(title_string[0], 0, i)), view_yview[view_current]+64, string_char_at(title_string[0], i+1), title_scale[0, i], title_scale[0, i], 0);
// title second word
if title_word&gt;0 for (i=0; i&lt;title_pos[1]+1; i+=1) draw_text_transformed(view_xview[view_current]+title_ox[1]+string_width(string_copy(title_string[1], 0, i)), view_yview[view_current]+98, string_char_at(title_string[1], i+1), title_scale[1, i], title_scale[1, i], 0);
// title "Zone"
if title_word&gt;1
{
    draw_set_font(objResources.fontTitleSmall);
    for (i=0; i&lt;title_pos[2]+1; i+=1) draw_text_transformed(view_xview[view_current]+title_ox[2]+string_width(string_copy(title_string[2], 0, i)), view_yview[view_current]+132, string_char_at(title_string[2], i+1), title_scale[2, i], title_scale[2, i], 0);
}
// title "Act"
if title_word&gt;2
{
    draw_set_font(objResources.fontTitleYellow);
    for (i=0; i&lt;title_pos[3]+1; i+=1) draw_text_transformed(view_xview[view_current]+title_ox[3]+string_width(string_copy(title_string[3], 0, i)), view_yview[view_current]+166, string_char_at(title_string[3], i+1), title_scale[3, i], title_scale[3, i], 0);
}
draw_set_color(c_white);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
