<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1024</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Screen settings
width = 426;
height = 240;
window_mode = 1;
window_scale = 2;
window_state = 2;
split_screen = false;
paused = false;
screenshot = -1; // for pausing
scanlines = false;
default_image_speed = 1;
alarm[0] = 2;
view_enabled = true;
view_visible[0] = true;
view_wview[0] = width;
view_hview[0] = height;
view_wport[0] = width;
view_hport[0] = height;
/**
These variables manage... flashing. yes, flashing.
Essential for the 30FPS mode, they also allow to remove some
"mod" and "!boolean" calculations here and there.
**/
// A simple boolean that goes from between 0 and 1 every drawn frame
flashing_visible = false;
// A lot of flashing objects rely on objScreen.image_index mod 4
// This variable will replace the calls to that property, but
// only when the conditioned code is purely visual
frame_counter = 0;
// Made this a variable so that the 30FPS mode doesn't incur
// constant "if 30FPS enabled" checks
frame_counter_increment = 1;
/**
Load the appropriate video mode. See the set_video_mode script for details
**/
video_mode = 0;
framerate = 0; // 0 - 60fps, 1 - 30fps
load_video_settings();
set_video_mode(video_mode);
set_30_fps(framerate);
// sync window properties
if window_get_fullscreen() window_mode = 2; else
if window_get_width() &gt; width or window_get_height() &gt; height { window_mode = 1; window_scale = 2 } else
if (window_get_width() != width * window_scale) or (window_get_height() != height * window_scale) window_set_size(width * window_scale, height * window_scale);
surface_resize(application_surface, width, height);
// os properties
/*fullscreen_enabled = false;
switch os_type
{
case os_windows:
case os_macosx:
    if (os_browser != browser_not_a_browser) break;
    fullscreen_enabled = true;
    break;
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Center Window After Resize
window_center();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Unpause
if not paused and screenshot &gt; -1 { background_delete(screenshot); screenshot = -1; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clean up
if screenshot &gt; -1 { background_delete(screenshot); screenshot = -1; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup views
view_enabled = true;
image_index=0;
view_visible[0] = true;
view_visible[1] = split_screen;
if split_screen view_yport[1] = height * 0.5;
for (var i = 0; i &lt; 2; i += 1)
{
    view_wview[i] = width;
    view_hview[i] = height;
    view_wport[i] = width;
    view_hport[i] = height - (height * 0.5 * split_screen);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// manage flashing (30 FPS-compatible)
flashing_visible = !flashing_visible;
frame_counter = (frame_counter + frame_counter_increment) mod 4;
with(all)
{
    event_user(15);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Screenshot and scanlines
if screenshot &gt; -1 &amp;&amp; !instance_exists(objSSHud)
{
    draw_enable_alphablend(false);
    draw_background_stretched_ext(screenshot, view_xview[view_current], view_yview[view_current], width, height, c_white, 1);
    draw_enable_alphablend(true);
}
else if scanlines
{
    //draw_background_stretched(backScanlines, 0, 0, room_width, 480);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="115">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Scroll through screen modes
set_video_mode((get_video_mode() + 1) mod 4);
// In case we're in the video options menu, update the visible label
with(objMenu)
{
    event_user(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
