<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1026</depth>
  <persistent>0</persistent>
  <parentName>objSceneObject</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize

// basics
state = 0;
total_bonus = 0;

// name tag
switch objGameData.character_id[0]
{
case 2: name_tag = "TAILS"; break;
case 3: name_tag = "KNUCKLES"; break;
default: name_tag = "SONIC";
}


// current act
act = objLevel.act;

// time bonus
time_bonus = 0;

// ring bonus
rings_bonus = 0;

// perfect bonus
perfect_bonus = -1;

// screen positions
draw_set_font(objResources.fontTitle);
title_ox1 = (objScreen.width * 0.5) - (string_width(name_tag) * 0.5)
title_ox2 = (objScreen.width * 0.5) - 88;
act_ox = (objScreen.width * 0.5) + 88;
score_ox = (objScreen.width * 0.5) - 104; //92;
tally_ox = (objScreen.width * 0.5) + 96;

// offsets
title_offset1 = ceil((title_ox1 + string_width(name_tag)) * 0.0625) * 16;
title_offset2 = ceil((objScreen.width - title_ox2) * 0.0625) * 16;
score_offset1 = (ceil((objScreen.width - score_ox) * 0.0625) * 16) + 48;
score_offset2 = score_offset1 + 80;
score_offset3 = score_offset1 + 80;
score_offset4 = score_offset1 + 96;

// music
play_jingle(bgmClear, false);

// start event
alarm[0] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with objMetallixController {
    state = 0;
    alarm[0] = 8;
    alarm[1] = 620;
}

play_boss_intro(bgmMetalSonicIntro,0);
objMusic.bossLoop = bgmMetalSonicLoop;

alarm[10] = 180;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with objPlayer {
    // animate
    animation_new = "look";
    timeline_speed = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Give control back to player
with objLevel.player[0] {

    // states and flags
    state = player_state_stand;
    spinning = false;
    jumping = false;
    jump_action = false;
    rolling_jump = false;
    facing = 1;
}

visible = false;
state = 4;

with objLevel {
    started = true;
    cleared = false;
    timer_enabled = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = 3;
//alarm[3] = 300;
alarm[3] = 280;
objMetallixController.state = 2;
audio_play_sound(sndBombExplosion,10,false);
with objFlower instance_change(objSmokePuff, false);
with objCapsule instance_change(objExplosionGroup, false);

if objProgram.in_past {
    with objLevel.player[0] {
        camera.left=16192;
        camera.bottom=1216;
        camera.top=640;
        camera.right=16896;
    }
} else
    with objLevel.player[0] {
        camera.left=2176;
        camera.bottom=448;
        camera.top=0;
        camera.right=2944;
    }



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = 2;
alarm[2] = 176;
alarm[11] = 220;





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>title_offset1</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>title_offset2</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>(title_offset1/16)+1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>421</id>
        <kind>3</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>(title_offset2/16)+1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle state
switch state
{
case 1: // move offsets (message)
    if title_offset1 title_offset1 -= 16;
    if title_offset2 title_offset2 -= 16;
    break;

case 2: // move offsets (scores)
    if score_offset1 score_offset1 -= 16;
    if score_offset2 score_offset2 -= 16;
    if score_offset3 score_offset3 -= 16;
    if score_offset4 score_offset4 -= 16;
    break;

case 3: // apply scores
    var change;

    // time bonus
    if time_bonus
    {
        change = min(time_bonus, 100);
        time_bonus -= change;
        total_bonus += change;
        player_add_score(change);
    }

    // rings bonus    
    if rings_bonus
    {
        change = min(rings_bonus, 100);
        rings_bonus -= change;
        total_bonus += change;
        player_add_score(change);
    }

    // perfect bonus    
    if perfect_bonus
    {
        change = min(perfect_bonus, 100);
        perfect_bonus -= change;
        total_bonus += change;
        player_add_score(change);
    }

    // if all scores have been added completely
    if not (time_bonus or rings_bonus or perfect_bonus)
    {
        // sound
        audio_stop_sound(sndBeep);
        //audio_play_sound(sndChing, 0, false);

        // finished
        state += 1;
        //alarm[3] = 220;
    }
    else if ((objScreen.image_index mod 4) == 0)
    {
        // sound
        audio_stop_sound(sndBeep);
        audio_play_sound(sndBeep, 0, false);
    }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Flash if about to disapear
if alarm[3] &gt; 0
    if objScreen.image_index mod 2 {
        if visible visible = false;
            else visible = true;
    
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw scorecard

draw_set_font(objResources.fontHud);
draw_text_color(view_xview[view_current]+score_ox + score_offset1, view_yview[view_current] + 112, 'TIME BONUS',c_white,c_white,c_yellow,c_yellow,1);
//draw_sprite(sprScore, 0, view_xview[view_current]+score_ox + score_offset1, view_yview[view_current] + 112);
draw_text_color(view_xview[view_current]+act_ox + title_offset2-32, view_yview[view_current] + 74, act,c_white,c_white,c_yellow,c_yellow,1);
//draw_sprite(sprAct, act, view_xview[view_current]+act_ox + title_offset2, view_yview[view_current] + 62);
draw_text_color(view_xview[view_current]+score_ox + score_offset2, view_yview[view_current] + 128, 'RING BONUS',c_white,c_white,c_yellow,c_yellow,1);
//draw_sprite(sprScore, 1, view_xview[view_current]+score_ox + score_offset2, view_yview[view_current] + 128);
if perfect_bonus &gt; -1 draw_text_color(view_xview[view_current]+score_ox + score_offset3, view_yview[view_current] + 144, 'PERFECT BONUS',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(view_xview[view_current]+score_ox + score_offset4, view_yview[view_current] + 160, 'TOTAL',c_white,c_white,c_yellow,c_yellow,1);
// text
draw_set_color(c_white);
draw_set_alpha(image_alpha);
draw_set_valign(fa_top);
draw_set_halign(fa_left);
draw_set_font(objResources.fontHud);
if objGameData.character_id[0] == 1 {
    draw_text_color(view_xview[view_current]+title_ox1 - title_offset1, view_yview[view_current] + 56, name_tag,c_white,c_white,c_blue,c_blue,1);
} else if objGameData.character_id[0] == 2 {
      draw_text_color(view_xview[view_current]+title_ox1 - title_offset1, view_yview[view_current] + 56, name_tag,c_white,c_white,c_orange,c_orange,1);
} else {
    draw_text_color(view_xview[view_current]+title_ox1 - title_offset1, view_yview[view_current] + 56, name_tag,c_white,c_white,c_red,c_red,1);
}
draw_text_color(view_xview[view_current]+title_ox2 + title_offset2, view_yview[view_current] + 74, "GOT THROUGH ACT",c_white,c_white,c_yellow,c_yellow,1);
draw_set_halign(fa_right);
draw_set_font(objResources.fontHud);
draw_text(view_xview[view_current] + tally_ox + score_offset1, view_yview[view_current] + 113, time_bonus);
draw_text(view_xview[view_current] + tally_ox + score_offset2, view_yview[view_current] + 129, rings_bonus);
if perfect_bonus &gt; -1 draw_text(view_xview[view_current] + tally_ox + score_offset3, view_yview[view_current] + 145, perfect_bonus);
draw_text(view_xview[view_current] + tally_ox + score_offset4, view_yview[view_current] + 161, total_bonus);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
