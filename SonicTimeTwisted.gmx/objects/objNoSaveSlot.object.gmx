<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprNoSaveSlot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialize values
iconIndex=0;
slotNumber=-1;
lastPastLevel=0;
lastFutureLevel=0;
alarm[0]=1;
visibleFuture=1;
visiblePast=0;
allowLevelStart=false;
characterSelect=1;

currentStone = 0;
currentEmerald = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Choose Icon

ini_open(save_file_name(slotNumber));
futureLevels[0]=real(base64_decode(ini_read_string(LEVELS, aAA1_f, false)));
futureLevels[1]=real(base64_decode(ini_read_string(LEVELS, aAA2_f, false)));
futureLevels[2]=real(base64_decode(ini_read_string(LEVELS, aRR1_f, false)));
futureLevels[3]=real(base64_decode(ini_read_string(LEVELS, aRR2_f, false)));
futureLevels[4]=real(base64_decode(ini_read_string(LEVELS, aFF1_f, false)));
futureLevels[5]=real(base64_decode(ini_read_string(LEVELS, aFF2_f, false)));
futureLevels[6]=real(base64_decode(ini_read_string(LEVELS, aVV1_f, false)));
futureLevels[7]=real(base64_decode(ini_read_string(LEVELS, aVV2_f, false)));
futureLevels[8]=real(base64_decode(ini_read_string(LEVELS, aDD1_f, false)));
futureLevels[9]=real(base64_decode(ini_read_string(LEVELS, aDD2_f, false)));
futureLevels[10]=real(base64_decode(ini_read_string(LEVELS, aTT1_f, false)));
futureLevels[11]=real(base64_decode(ini_read_string(LEVELS, aTT2_f, false)));
futureLevels[12]=real(base64_decode(ini_read_string(LEVELS, aSS1, false)));
futureLevels[13]=real(base64_decode(ini_read_string(LEVELS, aPP1, false)));
futureLevels[14]=real(base64_decode(ini_read_string(LEVELS, aPP2, false)));
futureLevels[15]=real(base64_decode(ini_read_string(LEVELS, aMM1, false)));

pastLevels[0]=real(base64_decode(ini_read_string(LEVELS, aAA1_p, false)));
pastLevels[1]=real(base64_decode(ini_read_string(LEVELS, aAA2_p, false)));
pastLevels[2]=real(base64_decode(ini_read_string(LEVELS, aRR1_p, false)));
pastLevels[3]=real(base64_decode(ini_read_string(LEVELS, aRR2_p, false)));
pastLevels[4]=real(base64_decode(ini_read_string(LEVELS, aFF1_p, false)));
pastLevels[5]=real(base64_decode(ini_read_string(LEVELS, aFF2_p, false)));
pastLevels[6]=real(base64_decode(ini_read_string(LEVELS, aVV1_p, false)));
pastLevels[7]=real(base64_decode(ini_read_string(LEVELS, aVV2_p, false)));
pastLevels[8]=real(base64_decode(ini_read_string(LEVELS, aDD1_p, false)));
pastLevels[9]=real(base64_decode(ini_read_string(LEVELS, aDD2_p, false)));
pastLevels[10]=real(base64_decode(ini_read_string(LEVELS, aTT1_p, false)));
pastLevels[11]=real(base64_decode(ini_read_string(LEVELS, aTT2_p, false)));
pastLevels[12]=false;
pastLevels[13]=false;
pastLevels[14]=false;
pastLevels[15]=false;
characterSelect=real(base64_decode(ini_read_string(STATS, CHARACTER, base64_encode(string(1)))));
currentStone = real(base64_decode(ini_read_string(EMERALDS, PAST,0)));
currentEmerald = real(base64_decode(ini_read_string(EMERALDS, FUTURE,0)));
ini_close();

for(i=0; i &lt; 16; i++) {

    if pastLevels[i] == true {
        
        lastPastLevel=i;
    
    } 
    
    if futureLevels[i] == true {
        
        lastFutureLevel=i;
    
    } 

}
show_debug_message("Last FUTURE" + string(lastFutureLevel));

if lastPastLevel &gt; lastFutureLevel {
    iconIndex = lastPastLevel;
}
else iconIndex = lastFutureLevel;

lastIndex = iconIndex;

if pastLevels[iconIndex] == true {
     visiblePast=1;
 }
 else if pastLevels[iconIndex] == false 
     visiblePast = 0;
 
 if futureLevels[iconIndex] == true {
     visibleFuture=1;
 }
 else if futureLevels[iconIndex] == false  visibleFuture = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_sprite_ext(sprite_index,0,x,y,image_xscale,image_yscale,0,c_white,1);
if characterSelect == 3 {
    draw_sprite_ext(sprKnucklesLevelEnd,8,x,y+30,1,1,0,c_white,1);
} else if characterSelect == 2 {
    draw_sprite_ext(sprTailsLevelEnd,1,x,y+24,1,1,0,c_white,1);
} else {
    draw_sprite_ext(sprSonicLevelEnd,1,x,y+28,1,1,0,c_white,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
