<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1026</depth>
  <persistent>0</persistent>
  <parentName>objSSHud</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
// Could have used the built-in function to replace the instance, but
// Android doesn't always agree with it
var newMenu = instance_create(0,0,objMenu_Android);
newMenu.default_state = menu.default_state;
newMenu.draw_with_view_offset = menu.draw_with_view_offset;
with(menu)
{
    instance_destroy();
}
menu = newMenu;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw lives
if(objProgram.inputManager.input == 0)
{
/*
    var lives_x_left = view_xview[view_current] + view_wview[view_current] - 100;
    var lives_y_top = view_yview[view_current]+16-(16*objScreen.split_screen);
*/
    if(objProgram.saveSlot &gt; -1) // if we are playing this in the mini-game/level select mode, lives don't appear
    {
        var lives_x_left = view_wview[view_current] - 100;
        var lives_y_top = 16-(16*objScreen.split_screen);
        // Smartphone mode - the HUD is drawn in the top-right corner
        // lives setpiece
        draw_sprite(sprLives, character_id[view_current], lives_x_left, lives_y_top - 12);
        
        // lives string
        draw_set_color(c_white);
        draw_set_alpha(image_alpha);
        draw_set_valign(fa_top);
        draw_set_halign(fa_right);
        draw_set_font(objResources.fontLives);
        draw_text(lives_x_left + 78, lives_y_top, objGameData.player_lives[view_current]);
    }
    else
    {
        draw_set_valign(fa_top);
        draw_set_halign(fa_right);
    }
    // Progress bar
    var pbOffsetX = 72;
    var pbOffsetY = 80;
    
    draw_set_alpha(0.25);
    draw_set_color(c_white);
    draw_line_width(pbOffsetX, pbOffsetY, pbOffsetX+282, pbOffsetY, 4);
    draw_set_alpha(1);
    
    var xmetalprog = 128 + objSSMetalSonic.progress * 280;
    if metalProgDisplay &gt; xmetalprog +2{
        metalProgDisplay-=2;
    }
    else if metalProgDisplay &lt; xmetalprog -2 {
        metalProgDisplay+=2;
    }
    
    var xplayerprog = 128 + objSSPlayer.progress * 280;
    if playerProgDisplay &gt; xplayerprog +2{
        playerProgDisplay-=2;
    }
    else if playerProgDisplay &lt; xplayerprog -2{
        playerProgDisplay+=2;
    }
    draw_sprite_ext(sprRacerIcon, 3, pbOffsetX + objSSMetalSonic.progress * 280, pbOffsetY, 1, 1, 0, c_white, 1);
    draw_sprite(sprRacerIcon, objGameData.character_id[0]-1, pbOffsetX + objSSPlayer.progress * 280, pbOffsetY);
    //draw_sprite_ext(sprRacerIcon, 3, metalProgDisplay, 224, 1, 1, 0, c_white, 1);
    //draw_sprite(sprRacerIcon, objGameData.character_id[0]-1, playerProgDisplay, 224);
}
else
{
    // Not using the touchscreen - the HUD is drawn in the bottom-left corner, as per usual
    event_inherited();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_text(100, 0, string(device_mouse_x_to_gui(0))+';'+string(device_mouse_y_to_gui(0)));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
