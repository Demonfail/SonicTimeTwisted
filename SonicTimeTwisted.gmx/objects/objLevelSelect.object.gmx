<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSelectLong</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = room_width/2;
y=5;
objProgram.stop_sound = true;
select = 0;
y_next = y;
move = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if input_check_pressed(cUP) and move == 0 and select &gt; 0{
    move = -1;
    select -=1;
    y_next -=15;
    audio_play_sound(sndBeep,0,false);
}
else if input_check_pressed(cDOWN) and move == 0 and select &lt; 27 {
    move = 1;
    select +=1;
    y_next +=15;
    audio_play_sound(sndBeep,0,false);
}
if move == 1 and y &lt; y_next
    y +=15;
else if move == -1 and y &gt; y_next
    y -=15;
else {
        move = 0;
        y_next = y;
    }
//if objGameData.character_id[0]!=select{
//check for select
if input_check_pressed(cACTION) or input_check_pressed(cSTART){
    
    switch select {
    
    case 0:
    objProgram.in_past = false;
    level_goto_next()
    break;
    
    case 1:
    objProgram.in_past = true;
    level_goto_next()
    break;
    
    case 2:
    objProgram.current_level=1;
    objProgram.in_past = false
    level_goto_next()
    break;
    
    case 3:
    objProgram.current_level=1;
    objProgram.in_past = true;
    level_goto_next()
    break;
    
    case 4:
    objProgram.current_level=2;
    objProgram.in_past = false;
    level_goto_next()
    break;
    
    case 5:
    objProgram.current_level=2;
    objProgram.in_past = true;
    level_goto_next()
    break;
    
    case 6:
    objProgram.current_level=3;
    objProgram.in_past = false;
    level_goto_next()
    break;
    
    case 7:
    objProgram.current_level=3;
    objProgram.in_past = true;
    level_goto_next()
    break;
    
    case 8:
    objProgram.current_level=4;
    objProgram.in_past = false;
    level_goto_next()
    break;
    
    case 9:
    objProgram.current_level=4;
    objProgram.in_past = true;
    level_goto_next()
    break;
    
    case 10:
    objProgram.current_level=5;
    objProgram.in_past = false;
    level_goto_next()
    break;
    
    case 11:
    objProgram.current_level=5;
    objProgram.in_past = true;
    level_goto_next()
    break;
    
    case 12:
    objProgram.current_level=6;
    objProgram.in_past = false;
    level_goto_next()
    break;
    
    case 13:
    objProgram.current_level=6;
    objProgram.in_past = true;
    level_goto_next()
    break;
    
    case 14:
    objProgram.current_level=7;
    objProgram.in_past = false;
    level_goto_next()
    break;
    
    case 15:
    objProgram.current_level=7;
    objProgram.in_past = true;
    level_goto_next()
    break;
    
    case 16:
    objProgram.current_level=8;
    objProgram.in_past = false;
    level_goto_next()
    break;
    
    case 17:
    objProgram.current_level=8;
    objProgram.in_past = true;
    level_goto_next()
    break;
    
    case 18:
    objProgram.current_level=9;
    objProgram.in_past = false;
    level_goto_next()
    break;
    
    case 19:
    objProgram.current_level=9;
    objProgram.in_past = true;
    level_goto_next()
    break;
    
    case 20:
    objProgram.current_level=10;
    objProgram.in_past = false;
    level_goto_next()
    break;
    
    case 21:
    objProgram.current_level=10;
    objProgram.in_past = true;
    level_goto_next()
    break;
    
    case 22:
    objProgram.current_level=11;
    objProgram.in_past = false;
    level_goto_next()
    break;
    
    case 23:
    objProgram.current_level=11;
    objProgram.in_past = true;
    level_goto_next()
    break;
    
    case 24:
    objProgram.current_level=12;
    objProgram.in_past = false;
    level_goto_next()
    break;
    
    case 25:
    objProgram.current_level=12;
    objProgram.in_past = true;
    level_goto_next()
    break;
    
    case 26: //Sunken Saucer
    objProgram.current_level=14;
    objProgram.in_past = false;
    level_goto_next()
    break;
    
    case 27:
    objProgram.current_level=15;
    objProgram.in_past = false;
    level_goto_next()
    break;
}}
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render Names
// setup
draw_set_color(c_white);
draw_set_alpha(image_alpha);
draw_set_valign(fa_top);
draw_set_halign(fa_center);
draw_set_font(objResources.fontHud);
draw_text_color(213,0,'ATTRACTION ATTACK ACT 1 FUTURE',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,15,'ATTRACTION ATTACK ACT 1 PAST',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,30,'ATTRACTION ATTACK ACT 2 FUTURE',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,45,'ATTRACTION ATTACK ACT 2 PAST',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,60,'RAGING RUINS ACT 1 FUTURE',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,75,'RAGING RUINS ACT 1 PAST',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,90,'RAGING RUINS ACT 2 FUTURE',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,105,'RAGING RUINS ACT 2 PAST',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,120,'FRIGID FORTRESS ACT 1 FUTURE',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,135,'FRIGID FORTRESS ACT 1 PAST',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,150,'FRIGID FORTRESS ACT 2 FUTURE',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,165,'FRIGID FORTRESS ACT 2 PAST',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,180,'VIRIDIAN VALLEY ACT 1 FUTURE',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,195,'VIRIDIAN VALLEY ACT 1 PAST',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,210,'VIRIDIAN VALLEY ACT 2 FUTURE',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,225,'VIRIDIAN VALLEY ACT 2 PAST',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,240,'DRIFTING DYNAMO ACT 1 FUTURE',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,255,'DRIFTING DYNAMO ACT 1 PAST',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,270,'DRIFTING DYNAMO ACT 2 FUTURE',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,285,'DRIFTING DYNAMO ACT 2 PAST',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,300,'TIDAL TUBES ACT 1 FUTURE',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,315,'TIDAL TUBES ACT 1 PAST',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,330,'TIDAL TUBES ACT 2 FUTURE',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,345,'TIDAL TUBES ACT 2 PAST',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,360,'SUNKEN SAUCER',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,375,'PLANETARY PANIC ACT 1',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,390,'PLANETARY PANIC ACT 2',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(213,405,'GALACNIK GAUNTLET',c_white,c_white,c_yellow,c_yellow,1);
draw_self();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>128,12</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
