<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGalanikSmall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>8</depth>
  <persistent>0</persistent>
  <parentName>objNonSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state=0;
image_speed=0;
remove=0;
firingCount = 0;
x3StepsBack = x;
y3StepsBack = y;
x2StepsBack = x;
y2StepsBack = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(objGalanikFireball)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset Firing

state = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch state {

case 0: // Move On Screen

    if instance_exists(objLevel.player[0]) {
        x=objPPBossController.x;
        if image_xscale &gt; .25 {
            image_xscale -=0.002;
            image_yscale -=0.002;
        }
    
        if y &gt; view_yview + view_hview*0.5 {
        
            y-=2;
        
        } else {
            y=view_yview + view_hview*0.5;
            state=1;
        
        }
    }
    
break;

case 1: // Fire
    
    /*if firingCount &gt; 5 {
    
        state = 3;
    
    }*/
    
    firingCount +=1;
    fireball = instance_create(x,y,objGalanikFireball);
    image_speed = .25;

    with objLevel.player[0] {
    
        if terrain_id == noone {
            other.fireball.platformId = instance_nearest(x,y,objBossPlatform);
        } else other.fireball.platformId = terrain_id;
    
    }
    
    y=view_yview + view_hview*0.5 ;
    state = 2;

break;

case 2: // Firing 

    if image_index == 4 {
    
        fireball.fire = true;
        
        
        
        image_speed = 0;
        image_index=0;
        if firingCount &gt; 4 {
        
            state = 3;
            
        } //else state = 1;
    
    }
    y=view_yview + view_hview*0.5 ;
break;

case 3: // Move Off Screen

    if instance_exists(objLevel.player[0]) {
        if image_xscale &lt; 1 {
            image_xscale +=0.002;
            image_yscale +=0.002;
        }
    
        if y &lt; view_yview + view_hview+6 {
        
            y+=2;
        
        } else {
        
            //state=4;
            instance_destroy();
            
            with objGalanik {
            
                state = 5;
                audio_play_sound(sndQuake,10,0);
                //alarm[0] = 100;
            
            }
        
        }
    }

break;

case 4: // Rest Reset

    image_xscale = 1;
    image_yscale = 1;

break;

}

with(objGalanikFireball)
{
    event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if xprevious &lt;&gt; x || yprevious &lt;&gt; y {

    var xdir = sign(x-xprevious);
    var ydir = sign(y-yprevious);

    if x3StepsBack &lt;&gt; x2StepsBack || y3StepsBack &lt;&gt; y2StepsBack {
        d3d_set_fog(1,c_green,0,0);
            draw_sprite_ext(sprite_index,image_index,x3StepsBack+xdir*3,y3StepsBack-ydir*3,image_xscale,image_yscale,0,c_white,.5);
        d3d_set_fog(0,c_white,0,0);
    }
    
    if xprevious &lt;&gt; x2StepsBack || yprevious &lt;&gt; y2StepsBack {
        d3d_set_fog(1,c_blue,0,0);
            draw_sprite_ext(sprite_index,image_index,x2StepsBack+xdir*3,y2StepsBack-ydir*3,image_xscale,image_yscale,0,c_white,.5);
        d3d_set_fog(0,c_white,0,0);
    }
    
    d3d_set_fog(1,c_red,0,0);
    draw_sprite_ext(sprite_index,image_index,xprevious+xdir*3,yprevious-ydir*3,image_xscale,image_yscale,0,c_white,.5);
    d3d_set_fog(0,c_white,0,0);
}




draw_self();


x3StepsBack = x2StepsBack
y3StepsBack = y2StepsBack
x2StepsBack = xprevious;
y2StepsBack = yprevious;

/*
var xdir = sign(x-xprevious);
var ydir = sign(y-yprevious);
var color = c_red;

for(i=0; i &lt; 64; i+=4;) {

    d3d_set_fog(1,color,0,0);
        draw_sprite_ext(sprite_index,image_index,x+i*xdir,y-i*ydir,image_xscale,image_yscale,0,c_white,.5);
        
        show_debug_message(x-i*xdir);
        show_debug_message(y*+i*ydir);
        
    d3d_set_fog(0,c_white,0,0);

    if color == c_white {
    
        color = c_red;
    
    } else if color == c_red {
    
        color = c_blue;
        
    } else if color == c_blue {
    
        color = c_green;
        
    } else if color = c_green{
    
        color = c_white;
    
    }
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
