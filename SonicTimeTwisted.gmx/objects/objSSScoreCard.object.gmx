<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1023</depth>
  <persistent>0</persistent>
  <parentName>objScoreCard</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>title_color = c_white;
// name tag
switch objGameData.character_id[0]
{
case 2: name_tag = "TAILS"; break;
case 3: name_tag = "KNUCKLES"; break;
default: name_tag = "SONIC";
}
name_tag += " GOT";

// time bonus
var total_time = objSSLevel.timer div 60;
if total_time &gt; 570 time_bonus = 50000; else
if total_time &gt; 555 time_bonus = 10000; else
if total_time &gt; 540 time_bonus = 5000; else
if total_time &gt; 510 time_bonus = 4000; else
if total_time &gt; 480 time_bonus = 3000; else
if total_time &gt; 420 time_bonus = 2000; else
if total_time &gt; 360 time_bonus = 1000; else
if total_time &gt; 300 time_bonus = 500; else
time_bonus = 0;

// perfect bonus
if (objSSLevel.total_rings == 0) perfect_bonus = 50000; else
perfect_bonus = -1;

// ring bonus
rings_bonus = objSSPlayer.rings*10;

// offsets
score_offset1 = ceil((objScreen.width - score_ox) * 0.0625) * 16;
score_offset2 = score_offset1 + 16;
score_offset3 = score_offset1 + 32;
score_offset4 = score_offset1 + 48;


// set this to false so that the drawing is not relative to the view
follow_view = false;

/* the speed of the countdown depends on the score tally mode
if the score tally mode is "random digits" or "variable speed",
which are basically the same outside of what's displayed,
then the "change" depends on the biggest bonus value from which
to count down. Else, its value is mostly fixed
objProgram.score_tally_mode : 0 - random digits, 1 - variable speed, 2 - constant speed
*/
max_change = 100;
if(objProgram.score_tally_mode &lt; 2)
{
   max_change = max(1, max(time_bonus, rings_bonus, perfect_bonus) div (215));
}
// copies of variables containing bonuses
// if the score tally is set to "random digits" mode, these variables, which
// will be drawn, contain different values, unrelated to the real ones
draw_time_bonus = time_bonus;
draw_rings_bonus = rings_bonus;
draw_perfect_bonus = perfect_bonus;
draw_total_bonus = total_bonus;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if instance_exists(objSSMessages) &amp;&amp; instance_exists(objSSPlayer)
    if objSSMessages.closing == 2 {
        //stop_all_music(false);
        level_goback();
    } else {
        objSSPlayer.kill = 4;
        visible = false;
       // objSSMessages.alarm[1] = 120;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw scorecard
d3d_set_projection_ortho(0, 0, view_wport, view_hport, 0);

draw_set_font(objResources.fontHud);
draw_text_color(score_ox + score_offset1, 112, 'TIME BONUS',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(score_ox + score_offset2, 128, 'RING BONUS',c_white,c_white,c_yellow,c_yellow,1);
draw_text_color(score_ox + score_offset4, 160, 'TOTAL',c_white,c_white,c_yellow,c_yellow,1);

// text
draw_set_color(c_white);
draw_set_alpha(image_alpha);
draw_set_valign(fa_top);
draw_set_halign(fa_left);
draw_set_font(objResources.fontHud);

draw_set_halign(fa_right);
draw_set_font(objResources.fontHud);
draw_text(tally_ox + score_offset1, 113, draw_time_bonus);
draw_text(tally_ox + score_offset2, 129, draw_rings_bonus);
if perfect_bonus &gt; -1 draw_text(tally_ox + score_offset3, 145, draw_perfect_bonus);
draw_text(tally_ox + score_offset4, 161, draw_total_bonus);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
