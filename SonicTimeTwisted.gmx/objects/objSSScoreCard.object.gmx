<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1023</depth>
  <persistent>0</persistent>
  <parentName>objScoreCard</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if objProgram.in_past {
    if(objProgram.special_past_current_level == 7)
    {
        line1 = string_replace("%c GOT ALL", "%c", name_tag);
        line2 = "TIME STONES";
    }
    else
    {
        line1 = string_replace("%c GOT A", "%c", name_tag);
        line2 = "TIME STONE";
    }
} else {
    if(objProgram.special_future_current_level == 7)
    {
        line1 = string_replace("%c GOT ALL", "%c", name_tag);
        line2 = "CHAOS EMERALDS";
    }
    else
    {
        line1 = string_replace("%c GOT A", "%c", name_tag);
        line2 = "CHAOS EMERALD";
    }
}

title_ox1 = (objScreen.width * 0.5) - (string_width(line1) * 0.5);
title_ox2 = (objScreen.width * 0.5) - (string_width(line2) * 0.5);

perfect_bonus = objProgram.ss_perfect_bonus;
rings_bonus = objProgram.ss_rings_bonus;
time_bonus = objProgram.ss_time_bonus;

is_act_scorecard = false;

/* the speed of the countdown depends on the score tally mode
if the score tally mode is "random digits" or "variable speed",
which are basically the same outside of what's displayed,
then the "change" depends on the biggest bonus value from which
to count down. Else, its value is mostly fixed
objProgram.score_tally_mode : 0 - random digits, 1 - variable speed, 2 - constant speed
*/
max_change = 100;
if(objProgram.score_tally_mode &lt; 2)
{
   max_change = max(1, max(time_bonus, rings_bonus, perfect_bonus) div (215));
}
// copies of variables containing bonuses
// if the score tally is set to "random digits" mode, these variables, which
// will be drawn, contain different values, unrelated to the real ones
draw_time_bonus = time_bonus;
draw_rings_bonus = rings_bonus;
draw_perfect_bonus = perfect_bonus;
draw_total_bonus = total_bonus;
// and these contain numbers of digits to show for the "random digits" mode
digits_time_bonus = string_length(string(time_bonus));
digits_rings_bonus = string_length(string(rings_bonus));
var expected_total_bonus = time_bonus + rings_bonus;
if(perfect_bonus &gt; 0)
{
    expected_total_bonus += perfect_bonus;
    digits_perfect_bonus = string_length(string(abs(perfect_bonus)));
}
else
{
    digits_perfect_bonus = 0;
}
digits_total_bonus = string_length(string(expected_total_bonus));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if instance_exists(objSSMessages) &amp;&amp; instance_exists(objSSPlayer)
    if objSSMessages.closing == 2 {
        //stop_all_music(false);
        level_goback();
    } else {
        objSSPlayer.kill = 4;
        visible = false;
       // objSSMessages.alarm[1] = 120;
    }
    */
stop_all_music(false);
level_goback();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stop_all_music(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
