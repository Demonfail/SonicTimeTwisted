<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1026</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// title strings
title_word = 0;
title_speed =0.25;
flash = false;
opening=true;
closing=false;
selectorOffset = 102;
closeMenu = false;
for (var i=0; i&lt;4; i+=1)
{
    title_string[i] = "";
    title_length[i] = 0;
    title_pos[i] = 0;
    title_ox[i] = 0;
    title_scale[i, 0] = 12;
}

title_string[0] = "3"
title_string[1] = "2" 
title_string[2] = "1"
title_string[3] = "G"
blue=make_colour_rgb(27,57,176);
/// Setup title
var i, j;
// setup lengths and offsets
draw_set_halign(fa_left);
for (i=0; i&lt;4; i+=1)
{
    // get length in characters
    title_length[i] = string_length(title_string[i]);
    if title_length[i]&lt;1 continue;
    // set font
    switch i
    {
    case 2: draw_set_font(objResources.fontTitleSmall); break;
    case 3: draw_set_font(objResources.fontTitleYellow); break;
    default: draw_set_font(objResources.fontTitleLarge);
    }
    // set offset
    title_ox[i] = 298-string_width(title_string[i]);
    // go through each character
    for (j=0; j&lt;title_length[i]; j+=1) title_scale[i, j] = 12;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>counter for retry menu</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>flash = false;
opening=false;
visible=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// scale opening
if !opening exit;
    if title_word&lt;4
    {
        // ignore empty strings
        if title_length[title_word]&lt;1
        {
            title_word += 1;
        }
        // ignore if past string length
        else if title_pos[title_word]&lt;title_length[title_word]
        { 
            // decrease scale to normal
            title_scale[title_word, title_pos[title_word]] = max(title_scale[title_word, title_pos[title_word]]-title_speed, 1);
            if title_word &lt; 3 &amp;&amp; title_scale[title_word, title_pos[title_word]] == 1 audio_play_sound(sndDingOpen, 1, false);
            else if title_word == 3 &amp;&amp; title_scale[title_word, title_pos[title_word]] == 1 {
            
                // Start Race
                audio_play_sound(sndDingEnd, 1, false);
                
                if (!global.special_level_music_played) {
                    if (audio_is_playing(objMusic.musicIntro) == false &amp;&amp; audio_is_playing(objMusic.musicLoop) == false) {
                        play_music_intro(objMusic.musicIntro,0);
                        global.special_level_music_played = true;
                    }
                }
                alarm[0] = 25;
                flash=true;
                with objSSLevel { started = true; }
                with objSSPlayer { started = true; }
                
                }
            
            if title_scale[title_word, title_pos[title_word]]==1
            {
                // go to the next letter / word
                title_pos[title_word] += 1; 
                //if title_word&gt;2 {  title_speed = .5; }
                if title_pos[title_word]==title_length[title_word] {title_pos[title_word] -= 1; title_word += 1; }
                if title_word==4 alarm[0] = 120;
            }
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if flash == true {
    if objScreen.frame_counter == 0 {
        visible = !visible;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game Play Messages
if objScreen.paused exit;
d3d_set_projection_ortho(0, 0, view_wport, view_hport, 0);
// score / time / rings string
draw_set_font(objResources.fontHud);
draw_set_color(c_white);
draw_set_halign(fa_center);
if closeMenu == false {
    if(alarm[1]== -1)
    {
        if (objSSPlayer.kill &gt; 0)
        {
            var menu = objSSHud.menu;
            // allow the menu object to handle everything
            if(!menu.active)
            {
                var menuStatus = 4;
                switch objSSPlayer.kill {
                    case 1:
                        menuStatus = 4;
                    break;
                    
                    case 2:
                        menuStatus = 5;
                    break;
                    
                    case 3:
                    case 4:
                        menuStatus = 6;
                    break;
                }
                menu.wait_for_release = false;
                menu.active = true;
                menu.state = menuStatus;
                with(menu)
                {
                    delay_timer = delay_timer_default;
                    event_user(1);
                }
            }
            if(menu.active)
            {
                if((menu.state &gt;= 4 &amp;&amp; menu.state &lt;= 6) || (menu.state == 10 &amp;&amp; (menu.confirm_state &gt;= 21 &amp;&amp; menu.confirm_state &lt;= 25)) || (menu.state &gt;= 21 &amp;&amp; menu.state &lt;= 25))
                {
                    // so weird this is managed in the draw event,
                    // but it doesn't seem to work otherwise
                    with(menu) event_user(0);
                    with(menu) event_user(4);
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Opening
if opening {
d3d_set_projection_ortho(0, 0, view_wport, view_hport, 0);
// title first word
draw_set_color(c_white);
draw_set_halign(fa_center);
draw_set_font(objResources.fontTitleLarge);
draw_text(213,64,"Race");
// title second word
draw_set_color(blue);
draw_text(213,98,"Metal Sonic");
/*if title_word&gt;0 for (i=0; i&lt;title_pos[1]+1; i+=1) draw_text_transformed(title_ox[1]+string_width(string_copy(title_string[1], 0, i))-70, 98, string_char_at(title_string[1], i+1), title_scale[1, i], title_scale[1, i], 0);
if title_word&gt;1 for (i=0; i&lt;title_pos[2]+1; i+=1) draw_text_transformed(title_ox[2]+string_width(string_copy(title_string[2], 0, i))+15, 98, string_char_at(title_string[2], i+1), title_scale[2, i], title_scale[2, i], 0);*/
draw_set_color(c_yellow);
//3
if title_word&gt;0 for (i=0; i&lt;title_pos[0]+1; i+=1) draw_text_transformed(title_ox[0]+string_width(string_copy(title_string[0], 0, i))-172, 132, string_char_at(title_string[0], i+1), title_scale[0, i], title_scale[0, i], 0);
//2
if title_word&gt;1 for (i=0; i&lt;title_pos[1]+1; i+=1) draw_text_transformed(title_ox[1]+string_width(string_copy(title_string[1], 0, i))-100, 132, string_char_at(title_string[1], i+1), title_scale[1, i], title_scale[1, i], 0);
//1
if title_word&gt;2 for (i=0; i&lt;title_pos[2]+1; i+=1) draw_text_transformed(title_ox[2]+string_width(string_copy(title_string[2], 0, i))-56, 132, string_char_at(title_string[2], i+1), title_scale[2, i], title_scale[2, i], 0);
//Go
if title_word&gt;3 draw_sprite_ext(sprSSHudGo,0,title_ox[3]+string_width(string_copy(title_string[3], 0, 0))+2, 132,title_scale[3, 0], title_scale[3, 0],0,c_white,1);
}

//if title_word&gt;4 for (i=0; i&lt;title_pos[5]+1; i+=1) draw_text_transformed(title_ox[5]+string_width(string_copy(title_string[5], 0, i))-56, 160, title_scale[title_word, title_pos[title_word]], title_scale[5, i], title_scale[5, i], 0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Closing
draw_set_font(objResources.fontHud);
    draw_set_color(c_white);
    draw_set_halign(fa_center);
    
    var stoneNumber;
    
    if objProgram.in_past {
        stoneNumber =objProgram.special_past_current_level;
    } else {
        stoneNumber =objProgram.special_future_current_level;
    }
    
    var stoneNumberString;
    switch stoneNumber {
        case 1: stoneNumberString = "1st" break;
        case 2: stoneNumberString = "2nd" break;
        case 3: stoneNumberString = "3rd" break;
        case 4: stoneNumberString = "4th" break;
        case 5: stoneNumberString = "5th" break;
        case 6: stoneNumberString = "6th" break;
        case 7: stoneNumberString = "7th" break;
    }
    
    
if closing == 1 {
    draw_text(213,80,"Metal Sonic Wins");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
